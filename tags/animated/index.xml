<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Animated on vlad路flore 路 tech</title>
    <link>https://vladflore.tech/tags/animated/</link>
    <description>Recent content in Animated on vlad路flore 路 tech</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Dec 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vladflore.tech/tags/animated/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Animated 4</title>
      <link>https://vladflore.tech/posts/2021/12/git-animated-4/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://vladflore.tech/posts/2021/12/git-animated-4/</guid>
      <description>&lt;p&gt;This is the forth and last video in the &lt;strong&gt;Git Animated&lt;/strong&gt; series.&#xA;If you are interested in the other ones, check the links below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/08/git-animated-1/&#34;&gt;part one&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/08/git-animated-2/&#34;&gt;part two&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/09/git-animated-3/&#34;&gt;part three&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Another way of integrating changes of a branch into another one is by performing a &lt;strong&gt;rebase&lt;/strong&gt;. Instead of creating a new merge commit, as it happens when we &lt;strong&gt;merge&lt;/strong&gt; two histories, a rebase will change the base of a branch from one commit to another. Changing the base of a branch means changing the commit that branch was created from to be some other commit.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Animated 3</title>
      <link>https://vladflore.tech/posts/2021/09/git-animated-3/</link>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://vladflore.tech/posts/2021/09/git-animated-3/</guid>
      <description>&lt;p&gt;This is the third video in the &lt;strong&gt;Git Animated&lt;/strong&gt; series.&#xA;If you are interested in the other ones, check the links below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/08/git-animated-1/&#34;&gt;part one&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/08/git-animated-2/&#34;&gt;part two&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/12/git-animated-4/&#34;&gt;part four&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this video we will merge two histories, &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;feature&lt;/code&gt;, which have diverged at commit &lt;code&gt;M2&lt;/code&gt;.&#xA;As each of the branches got new commits from that divergent point, the feature branch cannot be integrated&#xA;into the master branch using a fast-forward approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Animated 2</title>
      <link>https://vladflore.tech/posts/2021/08/git-animated-2/</link>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://vladflore.tech/posts/2021/08/git-animated-2/</guid>
      <description>&lt;p&gt;This is the second video in the &lt;strong&gt;Git Animated&lt;/strong&gt; series.&#xA;If you are interested in the other ones, check the links below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/08/git-animated-1/&#34;&gt;part one&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/09/git-animated-3/&#34;&gt;part three&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/12/git-animated-4/&#34;&gt;part four&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this video you will see what happens when we merge two histories, specifically merging &lt;code&gt;feature&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt;. The thing to note here is that the merge is a fast-forward one, this is possible when there are no further commits on the branch we branched off of, after the point of creating the new branch (in our case on the branch &lt;code&gt;master&lt;/code&gt; after commit &lt;code&gt;M2&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Animated 1</title>
      <link>https://vladflore.tech/posts/2021/08/git-animated-1/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://vladflore.tech/posts/2021/08/git-animated-1/</guid>
      <description>&lt;p&gt;Welcome to the first post and first video of the video series &lt;strong&gt;Git Animated&lt;/strong&gt;.&#xA;With this series I am trying to visually depict how different Git commands and actions look like, basically what happens behind them when you execute them.&lt;/p&gt;&#xA;&lt;p&gt;If you are interested in the other videos, please check the links below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/08/git-animated-2/&#34;&gt;part two&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/09/git-animated-3/&#34;&gt;part three&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vladflore.tech/posts/2021/12/git-animated-4/&#34;&gt;part four&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Note: if you are a software engineer and have never heard of Git, then this post, and the future ones, are not for you&amp;hellip;and I am also sorry for you!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
